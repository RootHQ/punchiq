{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../confetti/confetti.component\";\nfunction ConfirmationPunchComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ÉµÉµtext(2, \"Welcome In \");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction ConfirmationPunchComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11)(1, \"div\", 13);\n    i0.ÉµÉµtext(2, \"Enjoy Your Break \");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction ConfirmationPunchComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ÉµÉµtext(2, \"Welcome Back \");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction ConfirmationPunchComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 11);\n    i0.ÉµÉµelement(1, \"app-confetti\");\n    i0.ÉµÉµelementStart(2, \"div\", 14);\n    i0.ÉµÉµtext(3, \"Enjoy Your Time Off \");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction ConfirmationPunchComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\");\n    i0.ÉµÉµtext(1, \"s\");\n    i0.ÉµÉµelementEnd();\n  }\n}\nlet ConfirmationPunchComponent = /*#__PURE__*/(() => {\n  class ConfirmationPunchComponent {\n    authService;\n    router;\n    route;\n    http;\n    punchStatus = ''; // Possible values: 'NONE', 'break_start', 'break_end_time', 'punch_out_time'\n    companyId = '';\n    punchInTime = '';\n    breakStartTime = '';\n    breakEndTime = '';\n    punchOutTime = '';\n    countdownSeconds = 5;\n    countdownInterval;\n    messageShowPunch = 'Stay positive and keep going!';\n    constructor(authService, router, route, http) {\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.http = http;\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        this.companyId = params.get('companyId') || '';\n      });\n      this.punchInTime = localStorage.getItem('punch_in_time') || '';\n      this.breakStartTime = localStorage.getItem('break_start_time') || '';\n      this.breakEndTime = localStorage.getItem('break_end_time') || '';\n      this.punchOutTime = localStorage.getItem('punch_out_time') || '';\n      this.updatePunchStatus();\n      console.log('Punch Status:', this.punchStatus);\n      this.fetchAffirmation();\n      this.startCountdown();\n    }\n    fetchAffirmation() {\n      fetch('/affirmation/').then(response => response.json()).then(data => {\n        console.log(data);\n        this.messageShowPunch = data.affirmation || 'Stay positive!';\n      }).catch(err => console.error('Error fetching affirmation:', err));\n    }\n    startCountdown() {\n      this.countdownInterval = setInterval(() => {\n        this.countdownSeconds--;\n        if (this.countdownSeconds === 0) {\n          clearInterval(this.countdownInterval);\n          console.log('ðŸ”“ Unlocking and redirecting after 5 seconds...');\n          //this.onLogout();\n        }\n      }, 1000);\n    }\n    updatePunchStatus() {\n      this.punchStatus = 'NONE'; // Default status\n      if (this.isValidTime(this.punchInTime)) {\n        this.punchStatus = 'punchInTime';\n      }\n      if (this.isValidTime(this.breakStartTime)) {\n        this.punchStatus = 'breakStartTime';\n      }\n      if (this.isValidTime(this.breakEndTime)) {\n        this.punchStatus = 'breakEndTime';\n      }\n      if (this.isValidTime(this.punchOutTime)) {\n        this.punchStatus = 'punchOutTime';\n      }\n      console.log('Punch Status finished:', this.punchStatus);\n    }\n    isValidTime(value) {\n      const isValid = value != null && value !== '' && value !== 'null';\n      return isValid;\n    }\n    onLogout() {\n      this.authService.logout();\n      this.router.navigate(['/' + this.companyId + '/login']);\n    }\n    static Éµfac = function ConfirmationPunchComponent_Factory(t) {\n      return new (t || ConfirmationPunchComponent)(i0.ÉµÉµdirectiveInject(i1.AuthService), i0.ÉµÉµdirectiveInject(i2.Router), i0.ÉµÉµdirectiveInject(i2.ActivatedRoute), i0.ÉµÉµdirectiveInject(i3.HttpClient));\n    };\n    static Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: ConfirmationPunchComponent,\n      selectors: [[\"app-confirmation-punch\"]],\n      decls: 28,\n      vars: 7,\n      consts: [[1, \"header\"], [1, \"logo\"], [1, \"login-container\"], [1, \"login-box\"], [\"class\", \"punchStatus\", 4, \"ngIf\"], [1, \"messageShowPunch\"], [1, \"messageShow\"], [1, \"seconds\"], [4, \"ngIf\"], [1, \"divider\"], [1, \"btn\", \"btn-login\", \"topSpace\", \"Logoutbtn\", 3, \"click\"], [1, \"punchStatus\"], [1, \"greenMessage\"], [1, \"blueMessage\"], [1, \"redMessage\"]],\n      template: function ConfirmationPunchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0);\n          i0.ÉµÉµelement(1, \"div\", 1);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(2, \"div\", 2)(3, \"div\", 3);\n          i0.ÉµÉµtemplate(4, ConfirmationPunchComponent_div_4_Template, 3, 0, \"div\", 4);\n          i0.ÉµÉµtemplate(5, ConfirmationPunchComponent_div_5_Template, 3, 0, \"div\", 4);\n          i0.ÉµÉµtemplate(6, ConfirmationPunchComponent_div_6_Template, 3, 0, \"div\", 4);\n          i0.ÉµÉµtemplate(7, ConfirmationPunchComponent_div_7_Template, 4, 0, \"div\", 4);\n          i0.ÉµÉµelementStart(8, \"div\", 5);\n          i0.ÉµÉµtext(9);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(10, \"br\")(11, \"br\")(12, \"br\")(13, \"br\");\n          i0.ÉµÉµelementStart(14, \"div\", 6);\n          i0.ÉµÉµtext(15, \" You\\u2019ll automatically be logged out in... \");\n          i0.ÉµÉµelement(16, \"br\");\n          i0.ÉµÉµelementStart(17, \"span\", 7);\n          i0.ÉµÉµtext(18);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµtext(19, \" second\");\n          i0.ÉµÉµtemplate(20, ConfirmationPunchComponent_span_20_Template, 2, 0, \"span\", 8);\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(21, \"div\", 9);\n          i0.ÉµÉµtext(22, \"OR\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(23, \"button\", 10);\n          i0.ÉµÉµlistener(\"click\", function ConfirmationPunchComponent_Template_button_click_23_listener() {\n            return ctx.onLogout();\n          });\n          i0.ÉµÉµtext(24, \"Logout\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(25, \"br\")(26, \"br\")(27, \"br\");\n          i0.ÉµÉµelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(4);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.punchStatus === \"punchInTime\");\n          i0.ÉµÉµadvance(1);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.punchStatus === \"breakStartTime\");\n          i0.ÉµÉµadvance(1);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.punchStatus === \"breakEndTime\");\n          i0.ÉµÉµadvance(1);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.punchStatus === \"punchOutTime\");\n          i0.ÉµÉµadvance(2);\n          i0.ÉµÉµtextInterpolate1(\"\", ctx.messageShowPunch, \" \");\n          i0.ÉµÉµadvance(9);\n          i0.ÉµÉµtextInterpolate(ctx.countdownSeconds);\n          i0.ÉµÉµadvance(2);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.countdownSeconds !== 1);\n        }\n      },\n      dependencies: [i4.NgIf, i5.ConfettiComponent],\n      styles: [\".punch-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;background-color:#1c1c1c;height:100vh;font-family:Segoe UI,sans-serif}.punch-box[_ngcontent-%COMP%]{background-color:#2b2b2b;padding:40px;border-radius:12px;text-align:center;width:100%;max-width:400px;color:#fff}.description[_ngcontent-%COMP%]{font-size:.9rem;color:#ccc;margin-bottom:20px}.form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;text-align:left;margin:10px 0 5px;font-weight:700;color:#ddd}.form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:10px;border-radius:6px;border:none;margin-bottom:15px;background-color:#3a3a3a;color:#fff}.btn-punch[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#4caf50;border:none;border-radius:6px;font-weight:700;color:#fff;cursor:pointer;font-size:1rem}.separator[_ngcontent-%COMP%]{margin:20px 0;color:#999;font-size:.9rem}.btn-logout[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#888;border:none;border-radius:6px;color:#fff;font-weight:700;cursor:pointer;margin-bottom:10px}.missed-punch[_ngcontent-%COMP%]{display:block;color:#ccc;font-size:.85rem;text-decoration:underline;cursor:pointer}.description[_ngcontent-%COMP%]{font-size:12px;color:#dfdfdf;margin-bottom:20px}.form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;text-align:left;margin:20px 0 5px;color:#b2b2b2;font-weight:500;font-size:12px}.form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:95%;padding:10px;border-radius:6px;border:none;margin-bottom:10px;background-color:#323232;color:#fff}.Logoutbtn[_ngcontent-%COMP%]{margin-top:20px;background-color:#7f7f7f}.punchDays[_ngcontent-%COMP%]{background-color:#3bb95c}.divider[_ngcontent-%COMP%]{display:flex;align-items:center;text-align:center;color:#fff;height:19vh;justify-content:center}.divider[_ngcontent-%COMP%]:before, .divider[_ngcontent-%COMP%]:after{content:\\\"\\\";flex:1;border-bottom:1px solid white;margin:0 1em}.missed-punch[_ngcontent-%COMP%]{color:#b2b2b2;text-align:center;text-decoration:underline;cursor:pointer}.punchOutbtn[_ngcontent-%COMP%]{background-color:#c83d3d}.breackbtn[_ngcontent-%COMP%]{background-color:#42abcd}.blueMessage[_ngcontent-%COMP%]{font-size:42px;color:#42abcd;font-weight:700;width:100%}.redMessage[_ngcontent-%COMP%]{font-size:36px;color:#c83d3d;font-weight:700;width:100%}.greenMessage[_ngcontent-%COMP%]{font-size:42px;color:#3bb95c;font-weight:700;width:100%}.messageShow[_ngcontent-%COMP%]{font-size:14px;color:#dfdfdf;margin-top:17px}.messageShowPunch[_ngcontent-%COMP%]{font-size:16px;color:#dfdfdf;font-weight:500;margin-top:17px}\"]\n    });\n  }\n  return ConfirmationPunchComponent;\n})();\nexport { ConfirmationPunchComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}